<?xml version="1.0"?>
<ruleset name="PSR12NeutronRuleset">
    <description>PSR-12 and Neutron hybrid Ruleset.</description>

    <rule ref="PSR12"/>

    <!-- Bad parts of PHP -->
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <!-- See disable_functions PHP-FPM configuration -->
                <!-- https://github.com/szepeviktor/debian-server-tools/blob/master/webserver/phpfpm-pools/Skeleton-pool.conf#L23 -->
                <!-- PHP built-in functions -->
                <element key="array_push" value="null"/>
                <element key="compact" value="null"/>
                <element key="create_function" value="null"/>
                <element key="define" value="null"/>
                <element key="die" value="null"/>
                <element key="echo" value="null"/>
                <element key="error_log" value="null"/>
                <element key="eval" value="null"/>
                <element key="exit" value="null"/>
                <element key="extract" value="null"/>
                <element key="goto" value="null"/>
                <element key="ini_set" value="null"/>
                <element key="list" value="null"/>
                <element key="phpinfo" value="null"/>
                <element key="print_r" value="null"/>
                <element key="print" value="null"/>
                <element key="settype" value="null"/>
                <element key="var_dump" value="null"/>
                <!-- Symfony helpers -->
                <element key="dd" value="null"/>
                <element key="dump" value="null"/>
                <!-- Laravel helpers -->
                <element key="env" value="null"/>
                <!-- Type checking and converting function -->
                <element key="boolval" value="(bool)"/>
                <element key="doubleval" value="(float)"/>
                <element key="doubleval" value="floatval"/>
                <element key="floatval" value="(float)"/>
                <element key="intval" value="(int)"/>
                <element key="is_double" value="is_float"/>
                <element key="is_integer" value="is_int"/>
                <element key="is_long" value="is_int"/>
                <element key="is_null" value="null"/>
                <element key="is_real" value="is_float"/>
                <element key="strval" value="(string)"/>
                <!-- Legacy function names -->
                <element key="chop" value="rtrim"/>
                <element key="close" value="closedir"/>
                <element key="delete" value="unset"/>
                <element key="fputs" value="fwrite"/>
                <element key="ini_alter" value="ini_set"/>
                <element key="is_writeable" value="is_writable"/>
                <element key="join" value="implode"/>
                <element key="key_exists" value="array_key_exists"/>
                <element key="mt_rand" value="random_int"/>
                <element key="pos" value="current"/>
                <element key="rand" value="random_int"/>
                <element key="show_source" value="highlight_file"/>
                <element key="sizeof" value="count"/>
                <element key="strchr" value="strstr"/>
            </property>
        </properties>
    </rule>

    <!-- File rules -->
    <rule ref="Generic.Files.ExecutableFile"/>
    <rule ref="Generic.Files.OneObjectStructurePerFile"/>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="PEAR.Commenting.FileComment">
        <exclude name="PEAR.Commenting.FileComment.MissingCategoryTag"/>
        <exclude name="PEAR.Commenting.FileComment.MissingPackageTag"/>
        <exclude name="PEAR.Commenting.FileComment.MissingVersion"/>
    </rule>

    <!-- Namespace rule -->
    <!-- PSR1.Classes.ClassDeclaration.MissingNamespace -->

    <!-- Class and method rules -->
    <rule ref="PEAR.Commenting.ClassComment">
        <exclude name="PEAR.Commenting.ClassComment.MissingCategoryTag"/>
        <exclude name="PEAR.Commenting.ClassComment.MissingPackageTag"/>
        <exclude name="PEAR.Commenting.ClassComment.MissingLicenseTag"/>
        <exclude name="PEAR.Commenting.ClassComment.MissingAuthorTag"/>
        <exclude name="PEAR.Commenting.ClassComment.MissingLinkTag"/>
    </rule>

    <!-- Use camelCase -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName">
        <exclude name="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="Squiz.NamingConventions.ValidVariableName">
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
    </rule>

    <!-- Array declaration rules -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>

    <!-- Logical operators -->
    <rule ref="Generic.Formatting.SpaceAfterNot"/>

    <!-- TODO
    <rule ref="severity:0 instead of exclude??">
        <severity>0</severity>
        <type>warning</type>
    </rule>
    -->

    <rule ref="./NeutronRuleset.xml">
        <exclude name="Generic.Classes.OpeningBraceSameLine"/>
        <exclude name="Generic.Formatting.SpaceAfterCast"/>
        <exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
        <exclude name="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket"/>
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing"/>

        <exclude name="WordPress.Arrays.ArrayDeclarationSpacing"/>
        <exclude name="WordPress.Arrays.ArrayIndentation"/>
        <exclude name="WordPress.Arrays.ArrayKeySpacingRestrictions"/>
        <exclude name="WordPress.WhiteSpace.CastStructureSpacing"/>
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing"/>
        <exclude name="Universal.WhiteSpace.DisallowInlineTabs"/>
        <exclude name="WordPress.WhiteSpace.OperatorSpacing"/>
        <exclude name="Universal.WhiteSpace.PrecisionAlignment"/>
        <exclude name="NormalizedArrays.Arrays.ArrayBraceSpacing"/>
        <exclude name="Universal.Arrays.DisallowShortArraySyntax"/>
        <exclude name="WordPress.NamingConventions.ValidFunctionName"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName"/>
        <!-- Prefer Generic.PHP.NoSilencedErrors -->
        <exclude name="WordPress.PHP.NoSilencedErrors"/>

        <exclude name="Squiz.Operators.IncrementDecrementUsage"/>

        <exclude name="NeutronStandard.Whitespace.RequireParenthesisSpacing"/>
        <exclude name="NeutronStandard.Constants.DisallowDefine"/>
        <exclude name="NeutronStandard.StrictTypes.RequireStrictTypes"/>

        <!-- Covered by forbidden functions rule -->
        <exclude name="NeutronStandard.Extract.DisallowExtract"/>
        <exclude name="WordPress.PHP.DontExtract"/>

        <exclude name="VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable"/>
    </rule>
    <!-- WordPress-Core opposite rules -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.ControlStructures.DisallowYodaConditions"/>
    <rule ref="Generic.Formatting.NoSpaceAfterCast"/>
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
            <property name="requiredSpacesAfterOpen" value="0"/>
            <property name="requiredSpacesBeforeClose" value="0"/>
        </properties>
    </rule>

    <rule ref="WordPress-Docs"/>

    <rule ref="WordPress-Extra"/>

    <!-- TODO
    Look-and-See: https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards/Squiz/Sniffs/PHP
    -->

    <!-- Strict typing -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="linesCountBeforeDeclare" value="1"/>
            <property name="linesCountAfterDeclare" value="1"/>
            <property name="spacesCountAroundEqualsSign" value="0"/>
        </properties>
    </rule>
    <!-- Namespace -->
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>
    <!-- Functional -->
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
        <properties>
            <!-- Support PHP 7.2 -->
            <property name="enableNativeTypeHint" value="false"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly"/>
    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
    <rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants"/>
    <rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowEmpty"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit"/>
    <rule ref="SlevomatCodingStandard.Functions.StaticClosure"/>
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>
    <rule ref="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators"/>
    <rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator"/>
    <rule ref="SlevomatCodingStandard.Numbers.DisallowNumericLiteralSeparator"/>
    <!-- Cleaning -->
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>
    <rule ref="SlevomatCodingStandard.Functions.UnusedParameter"/>
    <rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
    <rule ref="SlevomatCodingStandard.PHP.RequireExplicitAssertion"/>
    <rule ref="SlevomatCodingStandard.PHP.RequireNowdoc"/>
    <rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking"/>
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable"/>
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
    <!-- Formatting -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming"/>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousTraitNaming"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireTernaryOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
    <rule ref="SlevomatCodingStandard.Functions.DisallowArrowFunction"/>
    <rule ref="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax"/>
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition"/>
    <rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>
    <!-- It is not possible to enforce FQCN-s any more -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="allowFullyQualifiedExceptions" value="true"/>
            <property name="allowFullyQualifiedNameForCollidingClasses" value="true"/>
            <property name="namespacesRequiredToUse" type="array"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
        <properties>
            <property name="forbiddenAnnotations" type="array">
                <element value="@package"/>
                <element value="@copyright"/>
            </property>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>
    <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment"/>
    <rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator"/>

    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <severity>0</severity>
        <type>warning</type>
    </rule>

    <!-- Custom rules -->
    <rule ref="PSR12NeutronRuleset.Strings.ConcatenationUsage">
        <severity>5</severity>
        <type>warning</type>
    </rule>
    <!-- https://github.com/szepeviktor/uninformative-words -->
    <rule ref="PSR12NeutronRuleset.NamingConventions.MeaningfulVariableName">
        <properties>
            <property name="forbiddenNames" type="array">
                <element key="arr" value="Provide more context"/>
                <element key="bool" value="Provide more context"/>
                <element key="boolean" value="Provide more context"/>
                <element key="cnt" value="Provide more context"/>
                <element key="col" value="Provide more context"/>
                <element key="coll" value="Provide more context"/>
                <element key="custom" value="Provide more context"/>
                <element key="detail" value="Provide more context"/>
                <element key="data" value="Provide more context"/>
                <element key="double" value="Provide more context"/>
                <element key="elem" value="Provide more context"/>
                <element key="err" value="Provide more context"/>
                <element key="extra" value="Provide more context"/>
                <element key="float" value="Provide more context"/>
                <element key="impl" value="Provide more context"/>
                <element key="ind" value="Provide more context"/>
                <element key="info" value="Provide more context"/>
                <element key="int" value="Provide more context"/>
                <element key="integer" value="Provide more context"/>
                <element key="item" value="Provide more context"/>
                <element key="iter" value="Provide more context"/>
                <element key="key" value="Provide more context"/>
                <element key="len" value="Provide more context"/>
                <element key="more" value="Provide more context"/>
                <element key="other" value="Provide more context"/>
                <element key="proc" value="Provide more context"/>
                <element key="req" value="Provide more context"/>
                <element key="res" value="Provide more context"/>
                <element key="ret" value="Provide more context"/>
                <element key="return" value="Provide more context"/>
                <element key="str" value="Provide more context"/>
                <element key="value" value="Provide more context"/>
                <element key="var" value="Provide more context"/>
                <element key="vdata" value="Provide more context"/>
            </property>
        </properties>
    </rule>
</ruleset>
